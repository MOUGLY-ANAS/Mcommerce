[{"/home/user/Documents/MCOMMERCE/frontend/src/index.js":"1","/home/user/Documents/MCOMMERCE/frontend/src/Store.js":"2","/home/user/Documents/MCOMMERCE/frontend/src/reportWebVitals.js":"3","/home/user/Documents/MCOMMERCE/frontend/src/App.js":"4","/home/user/Documents/MCOMMERCE/frontend/src/utils.js":"5","/home/user/Documents/MCOMMERCE/frontend/src/screens/HomeScreen.js":"6","/home/user/Documents/MCOMMERCE/frontend/src/screens/SigninScreen.js":"7","/home/user/Documents/MCOMMERCE/frontend/src/screens/CartScreen.js":"8","/home/user/Documents/MCOMMERCE/frontend/src/screens/ShippingAddressScreen.js":"9","/home/user/Documents/MCOMMERCE/frontend/src/screens/ProductScreen.js":"10","/home/user/Documents/MCOMMERCE/frontend/src/screens/SignupScreen.js":"11","/home/user/Documents/MCOMMERCE/frontend/src/screens/PaymentMethodScreen.js":"12","/home/user/Documents/MCOMMERCE/frontend/src/screens/PlaceOrderScreen.js":"13","/home/user/Documents/MCOMMERCE/frontend/src/screens/ProfileScreen.js":"14","/home/user/Documents/MCOMMERCE/frontend/src/screens/OrderScreen.js":"15","/home/user/Documents/MCOMMERCE/frontend/src/screens/OrderHistoryScreen.js":"16","/home/user/Documents/MCOMMERCE/frontend/src/screens/DashboardScreen.js":"17","/home/user/Documents/MCOMMERCE/frontend/src/screens/ProductListScreen.js":"18","/home/user/Documents/MCOMMERCE/frontend/src/screens/SearchScreen.js":"19","/home/user/Documents/MCOMMERCE/frontend/src/screens/ProductEditScreen.js":"20","/home/user/Documents/MCOMMERCE/frontend/src/screens/OrderListScreen.js":"21","/home/user/Documents/MCOMMERCE/frontend/src/screens/UserListScreen.js":"22","/home/user/Documents/MCOMMERCE/frontend/src/screens/MapScreen.js":"23","/home/user/Documents/MCOMMERCE/frontend/src/screens/UserEditScreen.js":"24","/home/user/Documents/MCOMMERCE/frontend/src/screens/ResetPasswordScreen.js":"25","/home/user/Documents/MCOMMERCE/frontend/src/screens/ForgetPasswordScreen.js":"26","/home/user/Documents/MCOMMERCE/frontend/src/components/SearchBox.js":"27","/home/user/Documents/MCOMMERCE/frontend/src/components/ProtectedRoute.js":"28","/home/user/Documents/MCOMMERCE/frontend/src/components/AdminRoute.js":"29","/home/user/Documents/MCOMMERCE/frontend/src/components/MessageBox.js":"30","/home/user/Documents/MCOMMERCE/frontend/src/components/LoadingBox.js":"31","/home/user/Documents/MCOMMERCE/frontend/src/components/Product.js":"32","/home/user/Documents/MCOMMERCE/frontend/src/components/CheckoutSteps.js":"33","/home/user/Documents/MCOMMERCE/frontend/src/components/Rating.js":"34","/home/user/Documents/MCOMMERCE/frontend/src/data.js":"35"},{"size":915,"mtime":1676564142000,"results":"36","hashOfConfig":"37"},{"size":2829,"mtime":1676564142000,"results":"38","hashOfConfig":"37"},{"size":362,"mtime":1676564142000,"results":"39","hashOfConfig":"37"},{"size":10552,"mtime":1685915789523,"results":"40","hashOfConfig":"37"},{"size":150,"mtime":1676564142000,"results":"41","hashOfConfig":"37"},{"size":2692,"mtime":1685919015854,"results":"42","hashOfConfig":"37"},{"size":2508,"mtime":1676564142000,"results":"43","hashOfConfig":"37"},{"size":4352,"mtime":1676564142000,"results":"44","hashOfConfig":"37"},{"size":4147,"mtime":1676564142000,"results":"45","hashOfConfig":"37"},{"size":9183,"mtime":1685922550882,"results":"46","hashOfConfig":"37"},{"size":3106,"mtime":1676564142000,"results":"47","hashOfConfig":"37"},{"size":2080,"mtime":1676564142000,"results":"48","hashOfConfig":"37"},{"size":6396,"mtime":1676564142000,"results":"49","hashOfConfig":"37"},{"size":3153,"mtime":1676564142000,"results":"50","hashOfConfig":"37"},{"size":10524,"mtime":1676564142000,"results":"51","hashOfConfig":"37"},{"size":2977,"mtime":1676564142000,"results":"52","hashOfConfig":"37"},{"size":4076,"mtime":1685915941573,"results":"53","hashOfConfig":"37"},{"size":5926,"mtime":1676564142000,"results":"54","hashOfConfig":"37"},{"size":8741,"mtime":1676564142000,"results":"55","hashOfConfig":"37"},{"size":8897,"mtime":1676564142000,"results":"56","hashOfConfig":"37"},{"size":4480,"mtime":1676564142000,"results":"57","hashOfConfig":"37"},{"size":4062,"mtime":1676564142000,"results":"58","hashOfConfig":"37"},{"size":3588,"mtime":1676564142000,"results":"59","hashOfConfig":"37"},{"size":4122,"mtime":1676564142000,"results":"60","hashOfConfig":"37"},{"size":2187,"mtime":1676564142000,"results":"61","hashOfConfig":"37"},{"size":1591,"mtime":1676564142000,"results":"62","hashOfConfig":"37"},{"size":1073,"mtime":1676564142000,"results":"63","hashOfConfig":"37"},{"size":307,"mtime":1676564142000,"results":"64","hashOfConfig":"37"},{"size":323,"mtime":1676564142000,"results":"65","hashOfConfig":"37"},{"size":166,"mtime":1676564142000,"results":"66","hashOfConfig":"37"},{"size":225,"mtime":1676564142000,"results":"67","hashOfConfig":"37"},{"size":1589,"mtime":1676564142000,"results":"68","hashOfConfig":"37"},{"size":484,"mtime":1676564142000,"results":"69","hashOfConfig":"37"},{"size":1459,"mtime":1676564142000,"results":"70","hashOfConfig":"37"},{"size":1191,"mtime":1676564142000,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"whj97f",{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"75"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"75"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"75"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"/home/user/Documents/MCOMMERCE/frontend/src/index.js",[],[],[],"/home/user/Documents/MCOMMERCE/frontend/src/Store.js",[],[],"/home/user/Documents/MCOMMERCE/frontend/src/reportWebVitals.js",[],[],"/home/user/Documents/MCOMMERCE/frontend/src/App.js",["182"],[],"import { BrowserRouter, Link, Route, Routes } from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Badge from 'react-bootstrap/Badge';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Container from 'react-bootstrap/Container';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useContext, useEffect, useState } from 'react';\nimport { Store } from './Store';\nimport CartScreen from './screens/CartScreen';\nimport SigninScreen from './screens/SigninScreen';\nimport ShippingAddressScreen from './screens/ShippingAddressScreen';\nimport SignupScreen from './screens/SignupScreen';\nimport PaymentMethodScreen from './screens/PaymentMethodScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport OrderHistoryScreen from './screens/OrderHistoryScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport Button from 'react-bootstrap/Button';\nimport { getError } from './utils';\nimport axios from 'axios';\nimport SearchBox from './components/SearchBox';\nimport SearchScreen from './screens/SearchScreen';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport DashboardScreen from './screens/DashboardScreen';\nimport AdminRoute from './components/AdminRoute';\nimport ProductListScreen from './screens/ProductListScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport OrderListScreen from './screens/OrderListScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport MapScreen from './screens/MapScreen';\nimport ForgetPasswordScreen from './screens/ForgetPasswordScreen';\nimport ResetPasswordScreen from './screens/ResetPasswordScreen';\nimport data from \"./data\"\nfunction App() {\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { fullBox, cart, userInfo } = state;\n\n  const signoutHandler = () => {\n    ctxDispatch({ type: 'USER_SIGNOUT' });\n    localStorage.removeItem('userInfo');\n    localStorage.removeItem('shippingAddress');\n    localStorage.removeItem('paymentMethod');\n    window.location.href = '/signin';\n  };\n  const [sidebarIsOpen, setSidebarIsOpen] = useState(false);\n  const [categories, setCategories] = useState([]);\n\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const { data } = await axios.get(`/api/products/categories`);\n        setCategories(data);\n      } catch (err) {\n        toast.error(getError(err));\n      }\n    };\n    fetchCategories();\n  }, []);\n  return (\n    <BrowserRouter>\n      <div\n        className={\n          sidebarIsOpen\n            ? fullBox\n              ? 'site-container active-cont d-flex flex-column full-box'\n              : 'site-container active-cont d-flex flex-column'\n            : fullBox\n            ? 'site-container d-flex flex-column full-box'\n            : 'site-container d-flex flex-column'\n        }\n      >\n        <ToastContainer position=\"bottom-center\" limit={1} />\n        <header>\n          <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n            <Container>\n              <Button\n                variant=\"dark\"\n                onClick={() => setSidebarIsOpen(!sidebarIsOpen)}\n              >\n                <i className=\"fas fa-bars\"></i>\n              </Button>\n\n              <LinkContainer to=\"/\">\n                <Navbar.Brand>MCOMMERCE</Navbar.Brand>\n              </LinkContainer>\n              <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n              <Navbar.Collapse id=\"basic-navbar-nav\">\n                <SearchBox />\n                <Nav className=\"me-auto  w-100  justify-content-end\">\n                  <Link to=\"/cart\" className=\"nav-link\">\n                    Cart\n                    {cart.cartItems.length > 0 && (\n                      <Badge pill bg=\"danger\">\n                        {cart.cartItems.reduce((a, c) => a + c.quantity, 0)}\n                      </Badge>\n                    )}\n                  </Link>\n                  {userInfo ? (\n                    <NavDropdown title={userInfo.name} id=\"basic-nav-dropdown\">\n                      <LinkContainer to=\"/profile\">\n                        <NavDropdown.Item>User Profile</NavDropdown.Item>\n                      </LinkContainer>\n                      <LinkContainer to=\"/orderhistory\">\n                        <NavDropdown.Item>Order History</NavDropdown.Item>\n                      </LinkContainer>\n                      <NavDropdown.Divider />\n                      <Link\n                        className=\"dropdown-item\"\n                        to=\"#signout\"\n                        onClick={signoutHandler}\n                      >\n                        Sign Out\n                      </Link>\n                    </NavDropdown>\n                  ) : (\n                    <Link className=\"nav-link\" to=\"/signin\">\n                      Sign In\n                    </Link>\n                  )}\n                  {userInfo && userInfo.isAdmin && (\n                    <NavDropdown title=\"Admin\" id=\"admin-nav-dropdown\">\n                      <LinkContainer to=\"/admin/dashboard\">\n                        <NavDropdown.Item>Dashboard</NavDropdown.Item>\n                      </LinkContainer>\n                      <LinkContainer to=\"/admin/products\">\n                        <NavDropdown.Item>Products</NavDropdown.Item>\n                      </LinkContainer>\n                      <LinkContainer to=\"/admin/orders\">\n                        <NavDropdown.Item>Orders</NavDropdown.Item>\n                      </LinkContainer>\n                      <LinkContainer to=\"/admin/users\">\n                        <NavDropdown.Item>Users</NavDropdown.Item>\n                      </LinkContainer>\n                    </NavDropdown>\n                  )}\n                </Nav>\n              </Navbar.Collapse>\n            </Container>\n          </Navbar>\n        </header>\n        <div\n          className={\n            sidebarIsOpen\n              ? 'active-nav side-navbar d-flex justify-content-between flex-wrap flex-column'\n              : 'side-navbar d-flex justify-content-between flex-wrap flex-column'\n          }\n        >\n          <Nav className=\"flex-column text-white w-100 p-2\">\n            <Nav.Item>\n              <strong>Categories</strong>\n            </Nav.Item>\n            {categories.map((category) => (\n              <Nav.Item key={category}>\n                <LinkContainer\n                  to={{ pathname: '/search', search: `category=${category}` }}\n                  onClick={() => setSidebarIsOpen(false)}\n                >\n                  <Nav.Link>{category}</Nav.Link>\n                </LinkContainer>\n              </Nav.Item>\n            ))}\n          </Nav>\n        </div>\n        <main>\n          <Container className=\"mt-3\">\n            <Routes>\n              <Route path=\"/product/:slug\" element={<ProductScreen />} />\n              <Route path=\"/cart\" element={<CartScreen />} />\n              <Route path=\"/search\" element={<SearchScreen />} />\n              <Route path=\"/signin\" element={<SigninScreen />} />\n              <Route path=\"/signup\" element={<SignupScreen />} />\n              <Route\n                path=\"/forget-password\"\n                element={<ForgetPasswordScreen />}\n              />\n              <Route\n                path=\"/reset-password/:token\"\n                element={<ResetPasswordScreen />}\n              />\n\n              <Route\n                path=\"/profile\"\n                element={\n                  <ProtectedRoute>\n                    <ProfileScreen />\n                  </ProtectedRoute>\n                }\n              />\n              <Route\n                path=\"/map\"\n                element={\n                  <ProtectedRoute>\n                    <MapScreen />\n                  </ProtectedRoute>\n                }\n              />\n              <Route path=\"/placeorder\" element={<PlaceOrderScreen />} />\n              <Route\n                path=\"/order/:id\"\n                element={\n                  <ProtectedRoute>\n                    <OrderScreen />\n                  </ProtectedRoute>\n                }\n              ></Route>\n              <Route\n                path=\"/orderhistory\"\n                element={\n                  <ProtectedRoute>\n                    <OrderHistoryScreen />\n                  </ProtectedRoute>\n                }\n              ></Route>\n              <Route\n                path=\"/shipping\"\n                element={<ShippingAddressScreen />}\n              ></Route>\n              <Route path=\"/payment\" element={<PaymentMethodScreen />}></Route>\n              {/* Admin Routes */}\n              <Route\n                path=\"/admin/dashboard\"\n                element={\n                  <AdminRoute>\n                    <DashboardScreen />\n                  </AdminRoute>\n                }\n              ></Route>\n              <Route\n                path=\"/admin/orders\"\n                element={\n                  <AdminRoute>\n                    <OrderListScreen />\n                  </AdminRoute>\n                }\n              ></Route>\n              <Route\n                path=\"/admin/users\"\n                element={\n                  <AdminRoute>\n                    <UserListScreen />\n                  </AdminRoute>\n                }\n              ></Route>\n              <Route\n                path=\"/admin/products\"\n                element={\n                  <AdminRoute>\n                    <ProductListScreen />\n                  </AdminRoute>\n                }\n              ></Route>\n              <Route\n                path=\"/admin/product/:id\"\n                element={\n                  <AdminRoute>\n                    <ProductEditScreen />\n                  </AdminRoute>\n                }\n              ></Route>\n              <Route\n                path=\"/admin/user/:id\"\n                element={\n                  <AdminRoute>\n                    <UserEditScreen />\n                  </AdminRoute>\n                }\n              ></Route>\n\n              <Route path=\"/\" element={<HomeScreen />} />\n            </Routes>\n          </Container>\n        </main>\n        <footer>\n          <div className=\"text-center\">All rights reserved</div>\n        </footer>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/home/user/Documents/MCOMMERCE/frontend/src/utils.js",[],[],"/home/user/Documents/MCOMMERCE/frontend/src/screens/HomeScreen.js",["183","184"],[],"import { useEffect, useReducer, useState } from \"react\";\nimport axios from \"axios\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Product from \"../components/Product\";\nimport { Helmet } from \"react-helmet-async\";\nimport LoadingBox from \"../components/LoadingBox\";\nimport MessageBox from \"../components/MessageBox\";\n import data from '../data';\nimport { Link } from \"react-router-dom\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_REQUEST\":\n      return { ...state, loading: true };\n    case \"FETCH_SUCCESS\":\n      return { ...state, products: action.payload, loading: false };\n    case \"FETCH_FAIL\":\n      return { ...state, loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nfunction HomeScreen() {\n  const [{ loading, error, products }, dispatch] = useReducer(reducer, {\n    products: [],\n    loading: true,\n    error: \"\",\n  });\n  // const [products, setProducts] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({ type: \"FETCH_REQUEST\" });\n      try {\n        const result = await axios.get(\"/api/products\");\n        dispatch({ type: \"FETCH_SUCCESS\", payload: result.data });\n      } catch (err) {\n        dispatch({ type: \"FETCH_FAIL\", payload: err.message });\n      }\n\n      // setProducts(result.data);\n    };\n    fetchData();\n  }, []);\n  return (\n    <div>\n      <Helmet>\n        <title>MCOMMERCE</title>\n      </Helmet>\n      <h1>Featured Products</h1>\n      <div className=\"products\">\n          {data.products.map((product) => (\n            <div className=\"product\" key={product.slug}>\n              <Link href={`/product/${product.slug}`}>\n                <img src={product.image} alt={product.name} />\n              </Link>\n              <div className=\"product-info\">\n                <Link href={`/product/${product.slug}`}>\n                  <p>{product.name}</p>\n                </Link>\n                <p>\n                  <strong>${product.price}</strong>\n                </p>\n                <button>Add to cart</button>\n              </div>\n            </div>\n          ))}\n        </div>\n      <div className=\"products\">\n        {loading ? (\n          <LoadingBox />\n        ) : error ? (\n          <MessageBox variant=\"danger\">{error}</MessageBox>\n        ) : (\n          <Row>\n            {products.map((product) => (\n              <Col key={product.slug} sm={6} md={4} lg={3} className=\"mb-3\">\n                <Product product={product}></Product>\n              </Col>\n            ))}\n          </Row>\n        )}\n      </div>\n    </div>\n  );\n}\nexport default HomeScreen;\n","/home/user/Documents/MCOMMERCE/frontend/src/screens/SigninScreen.js",[],[],"/home/user/Documents/MCOMMERCE/frontend/src/screens/CartScreen.js",[],[],"/home/user/Documents/MCOMMERCE/frontend/src/screens/ShippingAddressScreen.js",[],[],"/home/user/Documents/MCOMMERCE/frontend/src/screens/ProductScreen.js",[],[],"/home/user/Documents/MCOMMERCE/frontend/src/screens/SignupScreen.js",[],[],"/home/user/Documents/MCOMMERCE/frontend/src/screens/PaymentMethodScreen.js",[],[],"/home/user/Documents/MCOMMERCE/frontend/src/screens/PlaceOrderScreen.js",[],[],"/home/user/Documents/MCOMMERCE/frontend/src/screens/ProfileScreen.js",["185","186"],[],"import React, { useContext, useReducer, useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Store } from '../Store';\nimport { toast } from 'react-toastify';\nimport { getError } from '../utils';\nimport axios from 'axios';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'UPDATE_REQUEST':\n      return { ...state, loadingUpdate: true };\n    case 'UPDATE_SUCCESS':\n      return { ...state, loadingUpdate: false };\n    case 'UPDATE_FAIL':\n      return { ...state, loadingUpdate: false };\n\n    default:\n      return state;\n  }\n};\n\nexport default function ProfileScreen() {\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { userInfo } = state;\n  const [name, setName] = useState(userInfo.name);\n  const [email, setEmail] = useState(userInfo.email);\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const [{ loadingUpdate }, dispatch] = useReducer(reducer, {\n    loadingUpdate: false,\n  });\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    try {\n      const { data } = await axios.put(\n        '/api/users/profile',\n        {\n          name,\n          email,\n          password,\n        },\n        {\n          headers: { Authorization: `Bearer ${userInfo.token}` },\n        }\n      );\n      dispatch({\n        type: 'UPDATE_SUCCESS',\n      });\n      ctxDispatch({ type: 'USER_SIGNIN', payload: data });\n      localStorage.setItem('userInfo', JSON.stringify(data));\n      toast.success('User updated successfully');\n    } catch (err) {\n      dispatch({\n        type: 'FETCH_FAIL',\n      });\n      toast.error(getError(err));\n    }\n  };\n\n  return (\n    <div className=\"container small-container\">\n      <Helmet>\n        <title>User Profile</title>\n      </Helmet>\n      <h1 className=\"my-3\">User Profile</h1>\n      <form onSubmit={submitHandler}>\n        <Form.Group className=\"mb-3\" controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"name\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n        </Form.Group>\n        <div className=\"mb-3\">\n          <Button type=\"submit\">Update</Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","/home/user/Documents/MCOMMERCE/frontend/src/screens/OrderScreen.js",[],[],"/home/user/Documents/MCOMMERCE/frontend/src/screens/OrderHistoryScreen.js",[],[],"/home/user/Documents/MCOMMERCE/frontend/src/screens/DashboardScreen.js",[],[],"/home/user/Documents/MCOMMERCE/frontend/src/screens/ProductListScreen.js",[],[],"/home/user/Documents/MCOMMERCE/frontend/src/screens/SearchScreen.js",[],[],"/home/user/Documents/MCOMMERCE/frontend/src/screens/ProductEditScreen.js",[],[],"/home/user/Documents/MCOMMERCE/frontend/src/screens/OrderListScreen.js",[],[],"/home/user/Documents/MCOMMERCE/frontend/src/screens/UserListScreen.js",[],[],"/home/user/Documents/MCOMMERCE/frontend/src/screens/MapScreen.js",["187"],[],"import axios from 'axios';\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport {\n  LoadScript,\n  GoogleMap,\n  StandaloneSearchBox,\n  Marker,\n} from '@react-google-maps/api';\nimport { useNavigate } from 'react-router-dom';\nimport { Store } from '../Store';\nimport Button from 'react-bootstrap/Button';\nimport { toast } from 'react-toastify';\n\nconst defaultLocation = { lat: 45.516, lng: -73.56 };\nconst libs = ['places'];\n\nexport default function MapScreen() {\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { userInfo } = state;\n  const navigate = useNavigate();\n  const [googleApiKey, setGoogleApiKey] = useState('');\n  const [center, setCenter] = useState(defaultLocation);\n  const [location, setLocation] = useState(center);\n\n  const mapRef = useRef(null);\n  const placeRef = useRef(null);\n  const markerRef = useRef(null);\n\n  const getUserCurrentLocation = () => {\n    if (!navigator.geolocation) {\n      alert('Geolocation os not supported by this browser');\n    } else {\n      navigator.geolocation.getCurrentPosition((position) => {\n        setCenter({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n        });\n        setLocation({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n        });\n      });\n    }\n  };\n  useEffect(() => {\n    const fetch = async () => {\n      const { data } = await axios('/api/keys/google', {\n        headers: { Authorization: `BEARER ${userInfo.token}` },\n      });\n      setGoogleApiKey(data.key);\n      getUserCurrentLocation();\n    };\n\n    fetch();\n    ctxDispatch({\n      type: 'SET_FULLBOX_ON',\n    });\n  }, [ctxDispatch]);\n\n  const onLoad = (map) => {\n    mapRef.current = map;\n  };\n  const onIdle = () => {\n    setLocation({\n      lat: mapRef.current.center.lat(),\n      lng: mapRef.current.center.lng(),\n    });\n  };\n\n  const onLoadPlaces = (place) => {\n    placeRef.current = place;\n  };\n  const onPlacesChanged = () => {\n    const place = placeRef.current.getPlaces()[0].geometry.location;\n    setCenter({ lat: place.lat(), lng: place.lng() });\n    setLocation({ lat: place.lat(), lng: place.lng() });\n  };\n\n  const onMarkerLoad = (marker) => {\n    markerRef.current = marker;\n  };\n\n  const onConfirm = () => {\n    const places = placeRef.current.getPlaces() || [{}];\n    ctxDispatch({\n      type: 'SAVE_SHIPPING_ADDRESS_MAP_LOCATION',\n      payload: {\n        lat: location.lat,\n        lng: location.lng,\n        address: places[0].formatted_address,\n        name: places[0].name,\n        vicinity: places[0].vicinity,\n        googleAddressId: places[0].id,\n      },\n    });\n    toast.success('location selected successfully.');\n    navigate('/shipping');\n  };\n  return (\n    <div className=\"full-box\">\n      <LoadScript libraries={libs} googleMapsApiKey={googleApiKey}>\n        <GoogleMap\n          id=\"smaple-map\"\n          mapContainerStyle={{ height: '100%', width: '100%' }}\n          center={center}\n          zoom={15}\n          onLoad={onLoad}\n          onIdle={onIdle}\n        >\n          <StandaloneSearchBox\n            onLoad={onLoadPlaces}\n            onPlacesChanged={onPlacesChanged}\n          >\n            <div className=\"map-input-box\">\n              <input type=\"text\" placeholder=\"Enter your address\"></input>\n              <Button type=\"button\" onClick={onConfirm}>\n                Confirm\n              </Button>\n            </div>\n          </StandaloneSearchBox>\n          <Marker position={location} onLoad={onMarkerLoad}></Marker>\n        </GoogleMap>\n      </LoadScript>\n    </div>\n  );\n}\n","/home/user/Documents/MCOMMERCE/frontend/src/screens/UserEditScreen.js",[],[],"/home/user/Documents/MCOMMERCE/frontend/src/screens/ResetPasswordScreen.js",[],[],"/home/user/Documents/MCOMMERCE/frontend/src/screens/ForgetPasswordScreen.js",[],[],"/home/user/Documents/MCOMMERCE/frontend/src/components/SearchBox.js",[],[],"/home/user/Documents/MCOMMERCE/frontend/src/components/ProtectedRoute.js",[],[],"/home/user/Documents/MCOMMERCE/frontend/src/components/AdminRoute.js",[],[],"/home/user/Documents/MCOMMERCE/frontend/src/components/MessageBox.js",[],[],"/home/user/Documents/MCOMMERCE/frontend/src/components/LoadingBox.js",[],[],"/home/user/Documents/MCOMMERCE/frontend/src/components/Product.js",[],[],"/home/user/Documents/MCOMMERCE/frontend/src/components/CheckoutSteps.js",[],[],"/home/user/Documents/MCOMMERCE/frontend/src/components/Rating.js",[],[],"/home/user/Documents/MCOMMERCE/frontend/src/data.js",[],[],{"ruleId":"188","severity":1,"message":"189","line":39,"column":8,"nodeType":"190","messageId":"191","endLine":39,"endColumn":12},{"ruleId":"188","severity":1,"message":"192","line":1,"column":33,"nodeType":"190","messageId":"191","endLine":1,"endColumn":41},{"ruleId":"188","severity":1,"message":"193","line":11,"column":10,"nodeType":"190","messageId":"191","endLine":11,"endColumn":23},{"ruleId":"188","severity":1,"message":"194","line":30,"column":10,"nodeType":"190","messageId":"191","endLine":30,"endColumn":25},{"ruleId":"188","severity":1,"message":"195","line":32,"column":12,"nodeType":"190","messageId":"191","endLine":32,"endColumn":25},{"ruleId":"196","severity":1,"message":"197","line":58,"column":6,"nodeType":"198","endLine":58,"endColumn":19,"suggestions":"199"},"no-unused-vars","'data' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'LinkContainer' is defined but never used.","'confirmPassword' is assigned a value but never used.","'loadingUpdate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userInfo.token'. Either include it or remove the dependency array.","ArrayExpression",["200"],{"desc":"201","fix":"202"},"Update the dependencies array to be: [ctxDispatch, userInfo.token]",{"range":"203","text":"204"},[1673,1686],"[ctxDispatch, userInfo.token]"]